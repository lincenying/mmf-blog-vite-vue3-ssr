import{defineStore as x}from"pinia";import{c as r}from"../entry-server.js";import{reactive as U,toRefs as g}from"vue";const v=x("backendUserStore",()=>{const s=U({lists:{hasNext:0,hasPrev:0,path:"",page:1,data:[]},item:{data:null,path:""}}),c=async(e,t)=>{if(t||(t=r),s.lists.data.length>0&&e.path===s.lists.path&&e.page===1)return;const{code:a,data:i}=await t.get("backend/user/list",{...e,path:void 0,cache:!0});if(a===200&&i){const{list:d=[],path:m,hasNext:f=0,hasPrev:u=0,page:n}={...i,path:e.path,page:e.page};s.lists={data:n===1?d:s.lists.data.concat(d),hasNext:f,hasPrev:u,page:(n||1)+1,path:m}}},o=async(e,t)=>{t||(t=r);const{code:a,data:i}=await t.get("backend/user/item",{...e,path:void 0});a===200&&i&&(s.item={data:i,...e})},l=e=>{s.item.data=e;const t=s.lists.data.findIndex(a=>a._id===e._id);t>-1&&s.lists.data.splice(t,1,e)},p=e=>{const t=s.lists.data.findIndex(a=>a._id===e);t>-1&&s.lists.data.splice(t,1,{...s.lists.data[t],is_delete:1})},h=e=>{const t=s.lists.data.findIndex(a=>a._id===e);t>-1&&s.lists.data.splice(t,1,{...s.lists.data[t],is_delete:0})};return{...g(s),getUserList:c,getUserItem:o,updateUserItem:l,deleteUser:p,recoverUser:h}}),S=v;export{S as u};
