import{defineStore as u}from"pinia";import{reactive as g,toRefs as v}from"vue";import{c as r}from"../entry-server.js";const b=u("backendUserStore",()=>{const e=g({lists:{hasNext:0,hasPrev:0,path:"",page:1,data:[]},item:{data:null,path:""}}),c=async(t,s=r)=>{if(e.lists.data.length>0&&t.path===e.lists.path&&t.page===1)return;const{code:a,data:i}=await s.get("backend/user/list",{...t,path:void 0});if(a===200&&i){const{list:d=[],path:m,hasNext:f=0,hasPrev:x=0,page:n}={...i,path:t.path,page:t.page};e.lists={data:n===1?d:e.lists.data.concat(d),hasNext:f,hasPrev:x,page:(n||1)+1,path:m}}},o=async(t,s=r)=>{const{code:a,data:i}=await s.get("backend/user/item",{...t,path:void 0});a===200&&i&&(e.item={data:i,...t})},l=t=>{e.item.data=t;const s=e.lists.data.findIndex(a=>a._id===t._id);s>-1&&e.lists.data.splice(s,1,t)},p=t=>{const s=e.lists.data.findIndex(a=>a._id===t);s>-1&&e.lists.data.splice(s,1,{...e.lists.data[s],is_delete:1})},h=t=>{const s=e.lists.data.findIndex(a=>a._id===t);s>-1&&e.lists.data.splice(s,1,{...e.lists.data[s],is_delete:0})};return{...v(e),getUserList:c,getUserItem:o,updateUserItem:l,deleteUser:p,recoverUser:h}});export{b as u};
